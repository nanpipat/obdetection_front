{"version":3,"sources":["logo.svg","App.js","reportWebVitals.js","index.js"],"names":["App","useState","loading","setLoading","webcamRef","useRef","imgSrc","setImgSrc","modalIsOpen","setIsOpen","filename","setFilename","imgPreview","setImgPreview","imgResult","setImgResult","imgType","setImgType","capture","useCallback","imageSrc","current","getScreenshot","console","log","Modal","setAppElement","objectDetectionService","nvision","objectDetection","apiKey","afterOpenModal","closeModal","className","isOpen","onAfterOpen","onRequestClose","style","content","top","left","right","bottom","marginRight","transform","contentLabel","width","display","textAlign","paddingLeft","justifyContent","backgroundColor","marginTop","onClick","src","audio","ref","screenshotFormat","height","document","getElementById","click","id","hidden","type","onChange","event","target","files","reader","FileReader","readAsDataURL","onload","result","name","accept","margin","alignSelf","color","visible","disabled","img","alert","predict","rawData","replace","outputCroppedImage","outputVisualizedImage","then","resu","raw_data","err","obDetect","paddingBottom","maxHeight","maxWidth","borderStyle","borderColor","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"yNAAe,I,gFCqOAA,EA5NH,WAAO,IAAD,EACcC,oBAAS,GADvB,mBACTC,EADS,KACAC,EADA,KAEVC,EAAYC,iBAAO,MAFT,EAGYJ,mBAAS,MAHrB,mBAGTK,EAHS,KAGDC,EAHC,OAIoBN,oBAAS,GAJ7B,gCAKiBA,oBAAS,IAL1B,mBAKTO,EALS,KAKIC,EALJ,OAOgBR,mBAAS,IAPzB,mBAOTS,EAPS,KAOCC,EAPD,OAQoBV,mBAAS,MAR7B,mBAQTW,EARS,KAQGC,EARH,OASkBZ,mBAAS,MAT3B,mBASTa,EATS,KASEC,EATF,OAUcd,mBAAS,MAVvB,mBAUTe,EAVS,KAUAC,EAVA,KAYVC,EAAUC,uBAAY,WAC1B,IAAMC,EAAWhB,EAAUiB,QAAQC,gBACnCC,QAAQC,IAAIJ,GACZb,EAAUa,KACT,CAAChB,EAAWG,IAYfkB,IAAMC,cAAc,SAEpB,IAAMC,EAAyBC,IAAQC,gBAAgB,CACrDC,OAAQ,uGA8DJC,EAAiB,aAIjBC,EAAa,WACjBT,QAAQC,IAAI,YACZjB,EAAU,MACVE,GAAU,IAUZ,OACE,qBAAKwB,UAAU,MAAf,SACE,yBAAQA,UAAU,aAAlB,UACE,cAAC,IAAD,CACEC,OAAQ1B,EACR2B,YAAa,kBAAMJ,GACnBK,eAAgB,kBAAMJ,GACtBK,MAnGa,CACnBC,QAAS,CACPC,IAAK,MACLC,KAAM,MACNC,MAAO,OACPC,OAAQ,OACRC,YAAa,OACbC,UAAW,0BA6FPC,aAAa,gBALf,SAOE,sBAAKZ,UAAU,cAAf,UACE,sBAAKI,MAAO,CAAES,MAAO,OAAQC,QAAS,QAAtC,UACE,qBAAKV,MAAO,CAAES,MAAO,MAAOE,UAAW,OAAQC,YAAa,OAAQC,eAAgB,QAApF,SACE,uDAEF,qBAAKb,MAAO,CAAES,MAAO,MAAOE,UAAW,QAASE,eAAgB,SAAhE,SACE,wBAAQjB,UAAU,eAAeI,MAAO,CAAEc,gBAAiB,MAAOL,MAAO,OAAQM,UAAW,QAAUC,QAAS,kBAAMrB,KAArH,oBAGH1B,EAAS,qBACRgD,IAAKhD,IAGL,cAAC,IAAD,CACEiD,OAAO,EACPC,IAAKpD,EACLqD,iBAAiB,eAKnBnD,EACE,qBAAK2B,UAAU,YAAf,SACE,sBAAKA,UAAU,kBAAf,UACE,wBAAQA,UAAU,eAAeI,MAAO,CAAEM,YAAa,OAAQQ,gBAAiB,WAAaE,QA5D3F,WAClB1C,EAAY,kBACZE,EAAcP,GACdC,EAAU,MACVE,GAAU,GACVQ,EAAW,eAuDK,oBACA,wBAAQgB,UAAU,eAAeI,MAAO,CAAEc,gBAAiB,WAAaE,QAAS,kBAAM9C,EAAU,OAAjG,6BAIJ,qBAAK0B,UAAU,YAAf,SACE,wBAAQA,UAAU,eAAeI,MAAO,CAAEc,gBAAiB,WAAaE,QAASnC,EAAjF,kCAKV,qBAAKe,UAAU,aAAf,SACE,sBAAKA,UAAU,YAAf,UACE,qBAAKI,MAAO,CAAEqB,OAAQ,QAASf,YAAa,QAC1CW,IAAK1C,IAEP,6BAAKF,SAIT,qBAAKuB,UAAU,YAAf,SACE,sBAAKA,UAAU,kBAAf,UACE,wBAAQA,UAAU,eAAeI,MAAO,CAAEM,YAAa,OAAQQ,gBAAiB,WAAaE,QAtFxF,WACbM,SAASC,eAAe,eAAeC,SAqF/B,oBACA,uBAAOC,GAAG,cAAcC,QAAM,EAACC,KAAK,OAAOC,SAvGjC,SAAAC,GAClB,GAAIA,EAAMC,OAAOC,MAAM,GAAI,CACzB,IAAIC,EAAS,IAAIC,WACjBD,EAAOE,cAAcL,EAAMC,OAAOC,MAAM,IACxCC,EAAOG,OAAS,WAEdjD,QAAQC,IAAI,SAAU6C,GACtBxD,EAAcwD,EAAOI,SAEvB9D,EAAYuD,EAAMC,OAAOC,MAAM,GAAGM,MAClCzD,EAAWiD,EAAMC,OAAOC,MAAM,GAAGJ,MAEnCzC,QAAQC,IAAI0C,EAAMC,OAAOC,MAAM,GAAI,QA2FuCO,OAAO,YACzE,oBAAItC,MAAO,CAAEuC,OAAQ,EAAGC,UAAW,SAAUlC,YAAa,QAA1D,gBACA,wBAAQV,UAAU,eAAeI,MAAO,CAAEc,gBAAiB,WAAaE,QAAS,WAtIzF5C,GAAU,IAsIF,6BAIFP,EAAU,cAAC,IAAD,CACR8D,KAAK,QACLc,MAAM,OACNpB,OAAQ,IACRZ,MAAO,IACPiC,QAAS7E,IAGT,gCACE,qBAAK+B,UAAU,YAAf,SACE,qBAAKA,UAAU,kBAAf,SACE,wBAAQA,UAAU,eAAe+C,SAAwB,MAAdpE,GAAoC,IAAdA,EAAkByB,MAAO,CAAEc,gBAAiB,WAAaE,QAAS,kBAlJlI,SAAC4B,GAGhB,GAFA9E,GAAW,GACXoB,QAAQC,IAAIyD,EAAK,SACZA,EAGH,OAFAC,MAAM,wBACN/E,GAAW,GAGbwB,EAAuBwD,QAAQ,CAC7BC,QAASH,EAAII,QAAQ,QAAUrE,EAAU,WAAY,IACrDsE,oBAAoB,EACpBC,uBAAuB,IAEvBC,MAAK,SAACf,GACN,IAAIgB,EACJA,EAAOhB,EAAOiB,SACd3E,EAAa,QAAUC,EAAU,WAAayD,EAAOiB,UACrDnE,QAAQC,IAAIiE,EAAM,aAClBtF,GAAW,MACV,SAAAwF,GACDT,MAAMS,GACNxF,GAAW,MA6H0IyF,CAAShF,IAAlJ,0BAGJ,qBAAKqB,UAAU,YAAf,SACE,qBAAKA,UAAU,kBAAf,SACE,wBAAQA,UAAU,eAAeI,MAAO,CAAEc,gBAAiB,WAAaE,QAtFtE,WAChB1C,EAAY,MACZE,EAAc,MACdE,EAAa,MACbE,EAAW,OAkFG,0BAMTH,EAAY,sBAAKmB,UAAU,YAAYI,MAAO,CAAEwD,cAAe,QAAnD,UACX,8CACA,qBAAKxD,MAAO,CAAEyD,UAAW,QAASC,SAAU,OAC1CzC,IAAKxC,OAGP,mCAEIZ,EAAU,GAER,qBAAK+B,UAAU,YAAf,SACE,sBAAKI,MAAO,CAAE2D,YAAa,QAASC,YAAa,QAASnD,MAAO,MAAOY,OAAQ,QAASmB,UAAW,UAApG,UACE,wDACA,wFC7MLqB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFjD,SAASC,eAAe,SAM1BsC,M","file":"static/js/main.f1bb8eaa.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { useState, useCallback, useRef } from 'react'\nimport logo from './logo.svg';\nimport './App.css';\nimport Webcam from 'react-webcam'\nimport Modal from 'react-modal';\nimport nvision from \"@nipacloud/nvision/dist/browser/nvision\"\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\"\nimport Loader from 'react-loader-spinner';\n\nconst App = () => {\n  const [loading, setLoading] = useState(false);\n  const webcamRef = useRef(null);\n  const [imgSrc, setImgSrc] = useState(null);\n  const [opencamera, setOpencamera] = useState(false);\n  const [modalIsOpen, setIsOpen] = useState(false);\n\n  const [filename, setFilename] = useState(\"\");\n  const [imgPreview, setImgPreview] = useState(null);\n  const [imgResult, setImgResult] = useState(null);\n  const [imgType, setImgType] = useState(null);\n\n  const capture = useCallback(() => {\n    const imageSrc = webcamRef.current.getScreenshot();\n    console.log(imageSrc)\n    setImgSrc(imageSrc);\n  }, [webcamRef, setImgSrc]);\n\n  const customStyles = {\n    content: {\n      top: '50%',\n      left: '50%',\n      right: 'auto',\n      bottom: 'auto',\n      marginRight: '-50%',\n      transform: 'translate(-50%, -50%)'\n    }\n  };\n  Modal.setAppElement('#root');\n\n  const objectDetectionService = nvision.objectDetection({\n    apiKey: \"cdb29f355cb4059995e05420dc8d963f657898bf3a5f2f5e7a88c58279f5e4a0a1c4c4cf874594b42e413fc45c425425ac\"\n  });\n\n  const openModal = () => {\n    setIsOpen(true);\n  }\n\n  const obDetect = (img) => {\n    setLoading(true);\n    console.log(img, \"test\")\n    if (!img) {\n      alert(\"Not Found Image\")\n      setLoading(false);\n      return\n    }\n    objectDetectionService.predict({\n      rawData: img.replace(\"data:\" + imgType + \";base64,\", \"\"),\n      outputCroppedImage: true,\n      outputVisualizedImage: true\n    }\n    ).then((result) => {\n      let resu = \"\";\n      resu = result.raw_data\n      setImgResult(\"data:\" + imgType + \";base64,\" + result.raw_data)\n      console.log(resu, \"asdasdasd\");\n      setLoading(false);\n    }, err => {\n      alert(err);\n      setLoading(false);\n    });\n\n  }\n\n  const filehandler = event => {\n    if (event.target.files[0]) {\n      let reader = new FileReader();\n      reader.readAsDataURL(event.target.files[0]);\n      reader.onload = () => {\n        // Make a fileInfo Object\n        console.log(\"Called\", reader);\n        setImgPreview(reader.result)\n      };\n      setFilename(event.target.files[0].name)\n      setImgType(event.target.files[0].type)\n    }\n    console.log(event.target.files[0], \"img\")\n  }\n\n\n  const upload = () => {\n    document.getElementById(\"selectImage\").click()\n  }\n\n  const submitModal = () => {\n    setFilename(\"Webcam Capture\")\n    setImgPreview(imgSrc)\n    setImgSrc(null);\n    setIsOpen(false);\n    setImgType(\"image/jpeg\")\n\n  }\n\n  const afterOpenModal = () => {\n\n  }\n\n  const closeModal = () => {\n    console.log(\"asdasdas\")\n    setImgSrc(null);\n    setIsOpen(false);\n  }\n\n  const cleardata = () => {\n    setFilename(null)\n    setImgPreview(null)\n    setImgResult(null)\n    setImgType(null)\n  }\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <Modal\n          isOpen={modalIsOpen}\n          onAfterOpen={() => afterOpenModal}\n          onRequestClose={() => closeModal}\n          style={customStyles}\n          contentLabel=\"Example Modal\"\n        >\n          <div className=\"modalCamera\">\n            <div style={{ width: \"100%\", display: \"flex\" }}>\n              <div style={{ width: \"50%\", textAlign: \"left\", paddingLeft: \"1rem\", justifyContent: \"left\" }}>\n                <h1>Take your photo... </h1>\n              </div>\n              <div style={{ width: \"50%\", textAlign: \"right\", justifyContent: \"right\" }}>\n                <button className=\"buttonUpload\" style={{ backgroundColor: \"red\", width: \"50px\", marginTop: \"18px\" }} onClick={() => closeModal()}>X</button>\n              </div>\n            </div>\n            {imgSrc ? <img\n              src={imgSrc}\n            />\n              :\n              <Webcam\n                audio={false}\n                ref={webcamRef}\n                screenshotFormat=\"image/jpeg\"\n              />\n            }\n\n            {\n              imgSrc ?\n                <div className=\"buttonRow\">\n                  <div className=\"buttonContainer\">\n                    <button className=\"buttonUpload\" style={{ marginRight: \"1rem\", backgroundColor: \"#3c84c0\" }} onClick={submitModal}>Submit</button>\n                    <button className=\"buttonUpload\" style={{ backgroundColor: \"#49b431\" }} onClick={() => setImgSrc(null)}>Snap Again</button>\n                  </div>\n                </div>\n                :\n                <div className=\"buttonRow\">\n                  <button className=\"buttonUpload\" style={{ backgroundColor: \"#af1b1b\" }} onClick={capture}>Capture photo</button>\n                </div>\n            }\n          </div>\n        </Modal>\n        <div className=\"previewImg\">\n          <div className=\"buttonRow\">\n            <img style={{ height: \"100px\", marginRight: \"1rem\" }}\n              src={imgPreview}\n            />\n            <h5>{filename}</h5>\n          </div>\n\n        </div>\n        <div className=\"buttonRow\">\n          <div className=\"buttonContainer\">\n            <button className=\"buttonUpload\" style={{ marginRight: \"1rem\", backgroundColor: \"#3c84c0\" }} onClick={upload}>Upload</button>\n            <input id='selectImage' hidden type=\"file\" onChange={filehandler} accept=\"image/*\" />\n            <h6 style={{ margin: 0, alignSelf: \"center\", marginRight: \"1rem\" }}>Or</h6>\n            <button className=\"buttonUpload\" style={{ backgroundColor: \"#49b431\" }} onClick={() => openModal(false)}>Use Webcam</button>\n          </div>\n        </div>\n        {\n          loading ? <Loader\n            type=\"Rings\"\n            color=\"#FFF\"\n            height={100}\n            width={100}\n            visible={loading}\n          />\n            :\n            <div>\n              <div className=\"buttonRow\">\n                <div className=\"buttonContainer\">\n                  <button className=\"buttonUpload\" disabled={imgPreview == null || imgPreview == ''} style={{ backgroundColor: \"#3c84c0\" }} onClick={() => obDetect(imgPreview)}>Generate</button>\n                </div>\n              </div>\n              <div className=\"buttonRow\">\n                <div className=\"buttonContainer\">\n                  <button className=\"buttonUpload\" style={{ backgroundColor: \"#af1b1b\" }} onClick={cleardata}>Clear</button>\n                </div>\n              </div>\n            </div>\n        }\n\n        {imgResult ? <div className=\"resultImg\" style={{ paddingBottom: \"2rem\" }}>\n          <h2>Result Image</h2>\n          <img style={{ maxHeight: \"700px\", maxWidth: \"70%\" }}\n            src={imgResult}\n          />\n        </div> :\n          <>\n            {\n              loading ? \"\"\n                :\n                <div className=\"buttonRow\">\n                  <div style={{ borderStyle: \"solid\", borderColor: \"white\", width: \"40%\", height: \"400px\", alignSelf: \"center\" }}>\n                    <h3>File input not found..</h3>\n                    <h3>Please upload and generate to see result.</h3>\n                  </div>\n                </div>\n            }\n          </>\n        }\n\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}